allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven {
            credentials {
                username 'admin'
                password 'password'
            }
            url 'http://artifactory.pes.nikecloud.com/artifactory/libs-release'
        }
        maven {
            credentials {
                username 'admin'
                password 'password'
            }
            url 'http://artifactory.pes.nikecloud.com/artifactory/libs-snapshot'
        }
    }
}

apply from: file('gradle/release.gradle')
apply from: file('gradle/convention.gradle')
apply from: file('gradle/codequality.gradle')

apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'spring-boot'

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Brixton.M5"
    }
}

dependencies {
    compile('com.niketech.blueprint:blueprint-springboot-core:1.0.0.+')
    compile('org.springframework.cloud:spring-cloud-starter-sleuth')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-hateoas')
    compile('io.reactivex:rxjava:1.0.11')
    compile('com.netflix.eureka:eureka-client:1.1.126') {
        force = true
    }

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('junit:junit:4.12')
    testCompile('org.hamcrest:hamcrest-all:1.3')
    testCompile('org.mockito:mockito-all:1.10.19')
}

// Expands property placeholders in all .yaml and .properties files within the project
processResources {
    expand(project.properties)
    include("**/*.yaml", "**/*.properties")
    dependsOn versionArchives
}

tasks.withType(Test) {
    jvmArgs = ['-Dspring.profiles.active=unit']
}

bootRun {
    jvmArgs = ['-Dspring.profiles.active=local']
}